{"version":3,"sources":["../../../../test/es6/scripts/array.js"],"names":["sumAll","arr","max","Math","min","floor","ceil","result","i","diffArr","arr1","arr2","concat","filter","item","includes","console","log","findObject","objArr","source","sourceKeys","Object","keys","obj","length","hasOwnProperty"],"mappings":";;AAAA;;;AAGA;AACA,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AACjB;AACA;AACA,QAAIC,MAAMC,KAAKD,GAAL,CAASD,IAAI,CAAJ,CAAT,EAAiBA,IAAI,CAAJ,CAAjB,CAAV;AACA,QAAIG,MAAMD,KAAKC,GAAL,CAASH,IAAI,CAAJ,CAAT,EAAiBA,IAAI,CAAJ,CAAjB,CAAV;;AAEA;;AAEAC,UAAM,CAAN,GAAWA,MAAMC,KAAKE,KAAL,CAAWH,GAAX,CAAjB,GAAqCA,MAAMC,KAAKG,IAAL,CAAUJ,GAAV,CAA3C;AACAE,UAAM,CAAN,GAAWA,MAAMD,KAAKE,KAAL,CAAWD,GAAX,CAAjB,GAAqCA,MAAMD,KAAKG,IAAL,CAAUF,GAAV,CAA3C;;AAEA,QAAIG,SAAS,CAAb;AACA,SAAK,IAAIC,IAAIJ,GAAb,EAAkBI,KAAKN,GAAvB,EAA4BM,GAA5B,EAAiC;AAC7BD,kBAAUC,CAAV;AACH;;AAED,WAAOD,MAAP;AACH;AACDP,OAAO,CAAC,IAAD,EAAO,CAAC,GAAR,CAAP;;AAEA;AACA;AACA,SAASS,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6B;AACzB,WAAOD,KAAKE,MAAL,CAAYD,IAAZ,EAAkBE,MAAlB,CAAyB,UAAUC,IAAV,EAAgB;AAC5C;AACA,eAAO,CAACJ,KAAKK,QAAL,CAAcD,IAAd,CAAD,IAAwB,CAACH,KAAKI,QAAL,CAAcD,IAAd,CAAhC;AACH,KAHM,CAAP;AAIH;AACDE,QAAQC,GAAR,CAAYR,QAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAR,EAAsB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAtB,CAAZ;;AAEA;AACA;AACA;;AAEA,SAASS,UAAT,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoC;AAChC;AACA,QAAIC,aAAaC,OAAOC,IAAP,CAAYH,MAAZ,CAAjB;;AAEA,WAAOD,OAAON,MAAP,CAAc,UAAUW,GAAV,EAAe;AAChC,aAAK,IAAIhB,IAAI,CAAb,EAAgBA,IAAIa,WAAWI,MAA/B,EAAuCjB,GAAvC,EAA4C;AACxC;AACA,gBAAI,CAACgB,IAAIE,cAAJ,CAAmBL,WAAWb,CAAX,CAAnB,CAAD,IAAsCgB,IAAIH,WAAWb,CAAX,CAAJ,MAAuBY,OAAOC,WAAWb,CAAX,CAAP,CAAjE,EAAwF;AACpF,uBAAO,KAAP;AACH;AACJ;AACD,eAAO,IAAP;AACH,KARM,CAAP;AASH;;AAEDQ,QAAQC,GAAR,CAAYC,WAAW,CAAC,EAAE,KAAK,CAAP,EAAU,KAAK,CAAf,EAAD,EAAqB,EAAE,KAAK,CAAP,EAArB,EAAiC,EAAE,KAAK,CAAP,EAAU,KAAK,CAAf,EAAkB,KAAK,CAAvB,EAAjC,CAAX,EAAyE,EAAE,KAAK,CAAP,EAAU,KAAK,CAAf,EAAzE,CAAZ","file":"array.js","sourcesContent":["/**\r\n * Created by ZHQ on 2017/7/17.\r\n */\r\n// 计算两个值之间所有整数的和(参数是一个含两个值数组)\r\nfunction sumAll(arr) {\r\n    // 得到最大值和最小值\r\n    // Math.max() 函数返回一组数中的最大值\r\n    let max = Math.max(arr[0], arr[1]);\r\n    let min = Math.min(arr[0], arr[1]);\r\n\r\n    // 如果是小数，要先转换(大于0和小于0要区分开)\r\n\r\n    max > 0 ? (max = Math.floor(max)) : (max = Math.ceil(max));\r\n    min > 0 ? (min = Math.floor(min)) : (min = Math.ceil(min));\r\n\r\n    let result = 0;\r\n    for (let i = min; i <= max; i++) {\r\n        result += i;\r\n    }\r\n\r\n    return result;\r\n}\r\nsumAll([10.2, -1.2]);\r\n\r\n// 求两个数组的差异，并返回差异值组成的数组\r\n// 比如diff([1, 2, 3, 5], [1, 2, 3, 4, 5])就应该会返回一个[4]。\r\nfunction diffArr(arr1, arr2) {\r\n    return arr1.concat(arr2).filter(function (item) {\r\n        // filter()函数只要callback函数return的结果为true时，就返回该测试项\r\n        return !arr1.includes(item) || !arr2.includes(item);\r\n    });\r\n}\r\nconsole.log(diffArr([1, 2, 3, 5], [1, 2, 3, 4, 5]));\r\n\r\n// 若对象数组中的某个对象含有某个属性-值对，则输出这个对象\r\n// where([{ \"a\": 1, \"b\": 2 }, { \"a\": 1 }, { \"a\": 1, \"b\": 2, \"c\": 2 }], { \"a\": 1, \"b\": 2 });\r\n// 返回 [ { a: 1, b: 2 }, { a: 1, b: 2, c: 2 } ]\r\n\r\nfunction findObject(objArr, source) {\r\n    // 获得需要查找的属性\r\n    let sourceKeys = Object.keys(source);\r\n\r\n    return objArr.filter(function (obj) {\r\n        for (var i = 0; i < sourceKeys.length; i++) {\r\n            //如果obj中不存在那些属性，或属性不匹配，则返回false，即为不符合条件。\r\n            if (!obj.hasOwnProperty(sourceKeys[i]) || obj[sourceKeys[i]] !== source[sourceKeys[i]]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n}\r\n\r\nconsole.log(findObject([{ \"a\": 1, \"b\": 2 }, { \"a\": 1 }, { \"a\": 1, \"b\": 2, \"c\": 2 }], { \"a\": 1, \"b\": 2 }));"]}